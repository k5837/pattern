{"version":3,"sources":["webpack:///src/views/Home/Home.vue","webpack:///./src/views/Home/Home.vue?4072","webpack:///./src/views/Home/Home.vue"],"names":["Home","data","username","myChartd1","show1","show2","show3","show4","show5","show6","show7","show8","show9","ydata","watch","handler","this","drawPie","deep","mounted","PiedataGet","userGroup","methods","$echarts","init","document","getElementById","options","tooltip","trigger","legend","type","orient","left","align","top","series","name","radius","avoidLabelOverlap","label","show","position","emphasis","fontSize","fontWeight","labelLine","setOption","_this","axios","get","then","response","list","window","sessionStorage","getItem","newList","map","item","userId","hash","i","reduce","next","push","console","log","forEach","index","patterns","key","obj1","typeof_default","finalArr","v","concat","JSON","parse","obj","Object","value","catch","error","drawScatter","_this2","tStart","tEnd","filter","sortList","sort","a","b","Date","now","targetStartTime","targetEndTime","targetList","timeOne","timeTwo","timeThree","timeFour","timeFive","timeSix","timeOneList","timeTwoList","timeThreeList","timeFourList","timeFiveList","timeSixList","arrOne","objOne","arrTwo","objTwo","arrThree","objThree","arrFour","objFour","arrFive","objFive","arrSix","objSix","$nextTick","myChartd2","myChartd3","option1","formatter","params","marker","title","x","text","xAxis","nameTextStyle","color","verticalAlign","min","max","axisLabel","e","timestampToTime","yAxis","boundaryGap","pattern0","timestamp","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","option2","pattern1","option3","pattern2","onresize","resize","err","drawScatter2","_this3","timeSeven","timeEight","timeNine","timeTen","timeEleven","timeTwelve","timeSevenList","timeEightList","timeNineList","timeTenList","timeElevenList","timeTwelveList","arrSeven","objSeven","arrEight","objEight","arrNine","objNine","arrTen","objTen","arrEleven","objEleven","arrTwelve","objTwelve","M","D","h","m","drawScatter3","_this4","handleCommand","cmditem","userGroup2","userGroup3","$message","Home_Home","render","_vm","_h","$createElement","_c","_self","attrs","span","_v","style","width","height","id","on","command","icon","round","staticClass","slot","directives","rawName","expression","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/0.1edba4dcacccabba894a.js","sourcesContent":["<template>\r\n    <el-row>\r\n        <el-col :span=\"24\">\r\n            <div>\r\n                <h3>&nbsp;&nbsp;&nbsp;Pattern Histoty</h3>\r\n                <el-divider></el-divider>\r\n            </div>\r\n        </el-col>\r\n\r\n        <el-col :span=\"24\">\r\n            <div id=\"echart-pie1\" :style=\"{ width: '100%', height: '300px', }\"></div>\r\n        </el-col>\r\n\r\n        <el-dropdown @command=\"handleCommand\">\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" round>\r\n                Select<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n            </el-button>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n                <el-dropdown-item command=\"userGroup\">Hour</el-dropdown-item>\r\n                <el-dropdown-item command=\"userGroup2\">Day</el-dropdown-item>\r\n                <el-dropdown-item command=\"userGroup3\">Week</el-dropdown-item>\r\n            </el-dropdown-menu>\r\n        </el-dropdown>\r\n        <br>\r\n        <br>\r\n\r\n        <el-col :span=\"24\">\r\n            <div v-show=\"show1\" id=\"echart-scatter1\" :style=\"{ width: '100%', height: '300px' }\"></div>\r\n        </el-col>\r\n\r\n        <el-col :span=\"24\" v-show=\"show2\">\r\n            <div id=\"echart-scatter2\" :style=\"{ width: '100%', height: '300px' }\"></div>\r\n        </el-col>\r\n\r\n        <el-col :span=\"24\" v-show=\"show3\">\r\n            <div id=\"echart-scatter3\" :style=\"{ width: '100%', height: '300px' }\"></div>\r\n        </el-col>\r\n\r\n        <el-col :span=\"24\" v-show=\"show4\">\r\n            <div id=\"echart-scatter4\" :style=\"{ width: '100%', height: '300px' }\"></div>\r\n        </el-col>\r\n\r\n\r\n        <el-col :span=\"24\" v-show=\"show5\">\r\n            <div id=\"echart-scatter5\" :style=\"{ width: '100%', height: '300px' }\"></div>\r\n        </el-col>\r\n\r\n        <el-col :span=\"24\" v-show=\"show6\">\r\n            <div id=\"echart-scatter6\" :style=\"{ width: '100%', height: '300px' }\"></div>\r\n        </el-col>\r\n\r\n        <el-col :span=\"24\" v-show=\"show7\">\r\n            <div id=\"echart-scatter7\" :style=\"{ width: '100%', height: '300px' }\"></div>\r\n        </el-col>\r\n\r\n\r\n        <el-col :span=\"24\" v-show=\"show8\">\r\n            <div id=\"echart-scatter8\" :style=\"{ width: '100%', height: '300px' }\"></div>\r\n        </el-col>\r\n\r\n        <el-col :span=\"24\" v-show=\"show9\">\r\n            <div id=\"echart-scatter9\" :style=\"{ width: '100%', height: '300px' }\"></div>\r\n        </el-col>\r\n\r\n\r\n\r\n    </el-row>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            username: '',\r\n\r\n            myChartd1: null,//扇形图\r\n\r\n            show1: true,\r\n            show2: true,\r\n            show3: true,\r\n            show4: false,\r\n            show5: false,\r\n            show6: false,\r\n            show7: false,\r\n            show8: false,\r\n            show9: false,\r\n\r\n            ydata: [\r\n\r\n            ],\r\n\r\n            // xdata: ['1', '2', '3', '4', '5', '6'],\r\n            // adata: [120, 132, 101, 134, 90, 230, 210],\r\n            // bdata: [220, 182, 191, 234, 290, 330, 310],\r\n            // cdata: [150, 232, 201, 154, 190, 330, 410],\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        //扇形图\r\n        ydata: {\r\n            handler: function () {\r\n                this.drawPie();\r\n            },\r\n            deep: true,\r\n        },\r\n    },\r\n    mounted: function () {\r\n        this.PiedataGet();\r\n        this.drawPie();\r\n\r\n        this.userGroup();\r\n\r\n\r\n    },\r\n\r\n\r\n    methods: {\r\n        //绘制扇形图\r\n        drawPie() {\r\n            let myChartd1 = this.$echarts.init(document.getElementById(\"echart-pie1\"));\r\n            let options = {\r\n                tooltip: {\r\n                    trigger: 'item'\r\n                },\r\n                legend: {\r\n                    type: \"scroll\",\r\n                    orient: \"vertical\",\r\n                    left: \"70%\",\r\n                    align: \"left\",\r\n                    top: \"30%\",\r\n                },\r\n                series: [\r\n                    {\r\n                        name: 'Access From',\r\n                        type: 'pie',\r\n                        radius: ['40%', '70%'],\r\n                        avoidLabelOverlap: false,\r\n                        label: {\r\n                            show: false,\r\n                            position: 'center'\r\n                        },\r\n                        emphasis: {\r\n                            label: {\r\n                                show: true,\r\n                                fontSize: '40',\r\n                                fontWeight: 'bold'\r\n                            }\r\n                        },\r\n                        labelLine: {\r\n                            show: false\r\n                        },\r\n                        data: this.ydata,\r\n                    }\r\n                ]\r\n            };\r\n            //随着屏幕大小调节图表\r\n            myChartd1.setOption(options);\r\n        },\r\n        PiedataGet() {\r\n            const Url = 'https://v614backend-1-x1986037.deta.app/api/v1/records/';\r\n            axios.get(Url)\r\n                .then((response) => {\r\n\r\n                    let list = response.data\r\n                    let username = window.sessionStorage.getItem('username')\r\n                    let newList = list && list.map(item => { return { userId: item.userId, data: [] } })\r\n\r\n                    let hash = {};//数组去重\r\n                    newList = newList && newList.reduce((item, next) => {\r\n                        hash[next.userId] ? '' : hash[next.userId] = true && item.push(next);\r\n                        return item\r\n                    }, [])\r\n                    console.log(hash[username])\r\n\r\n                    //给每个对象的data追加数据\r\n                    list && list.forEach((item, index) => {\r\n                        for (let i in newList) {\r\n                            if (item.userId == newList[i].userId) {\r\n                                newList[i].data.push(item.patterns)\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    for (let i in newList) {\r\n\r\n                        console.log(typeof newList[i].userId)\r\n                        console.log(typeof username)\r\n                        if (newList[i].userId == username) {\r\n                            // 这里应该循环处理，newList[i].data是一个数组\r\n                            const list = newList[i].data;\r\n                            let finalArr = [];\r\n                            list.forEach((i, v) => {\r\n                                // 把多个数组拆分出来的数字合并到一个数组\r\n                                finalArr = finalArr.concat(JSON.parse(i));//parse(i)解析数组\r\n                            });\r\n\r\n                            console.log(\"最终的结果：\", finalArr);\r\n\r\n                            let obj = {};\r\n                            finalArr.forEach((i, v) => {\r\n                                obj[`pattern${i}`] = (obj[`pattern${i}`] || 0) + 1;\r\n\r\n                            });\r\n\r\n                            for (var key in obj) {\r\n                                var obj1 = new Object();\r\n                                obj1.value = obj[key];\r\n                                obj1.name = key;\r\n                                this.ydata.push(obj1);\r\n                            }\r\n                            console.log('扇形图数据', this.ydata);\r\n                        }\r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                    // console.log(error)\r\n                })\r\n        },\r\n\r\n        drawScatter() {\r\n            // 获取数据\r\n            const Url = 'https://v614backend-1-x1986037.deta.app/api/v1/records';\r\n            axios.get(Url)\r\n                .then((response) => {\r\n                    let list = response.data\r\n                    console.log('原始数据：', list)\r\n\r\n                    list = list.map(item => {\r\n                        const { userId, patterns, tStart, tEnd } = item\r\n                        return {\r\n                            userId, patterns: JSON.parse(patterns), tStart, tEnd,\r\n                        }\r\n                    })\r\n                    console.log(\"处理后的数据：\", list)\r\n\r\n                    // 过滤登录用户数据\r\n                    let username = sessionStorage.getItem('username')\r\n                    list = list.filter(item => item.userId === username)\r\n                    console.log(\"过滤后的数据：\", list)\r\n\r\n                    const sortList = list.sort((a, b) => {\r\n                        return a.tStart - b.tStart\r\n                    })\r\n\r\n                    console.log(\"排序后数组：\", sortList)\r\n\r\n                    // let initTime = 0\r\n                    // sortList.forEach((i, v) => {\r\n                    //     const { tStart } = i\r\n\r\n                    //     if (tStart > initTime) {\r\n                    //         initTime = tStart\r\n                    //         return\r\n                    //     } else {\r\n                    //         console.log(\"需要排序！！！！\")\r\n                    //     }\r\n                    // })\r\n\r\n                    console.log(\"当前时间戳：\", Date.now())\r\n                    console.log(\"向前一小时：\", new Date(Date.now() - 1000 * 60 * 60))\r\n\r\n                    // 临时测试数据\r\n                    //let tempStartTime = 1676527284480\r\n\r\n                    let now = Date.now()\r\n                    //let now = tempStartTime\r\n\r\n\r\n                    // 目标时间段\r\n                    const targetStartTime = now - 1000 * 60 * 60\r\n                    const targetEndTime = now\r\n\r\n                    // const targetList = sortList.filter(item => item.tStart >= targetStartTime && item.tEnd <= targetEndTime)\r\n                    const targetList = sortList.filter(item => item.tStart >= targetStartTime && item.tStart <= targetEndTime)\r\n\r\n                    console.log(\"按照时间过滤后的：\", targetList)\r\n\r\n                    // targetList[targetList.length-1]\r\n\r\n                    // 把现在按照时间过滤的数组进行区间划分(6段时间)\r\n                    let timeOne = [targetStartTime, targetStartTime + 1000 * 60 * 10]\r\n                    let timeTwo = [targetStartTime + 1000 * 60 * 10, targetStartTime + 1000 * 60 * 20]\r\n                    let timeThree = [targetStartTime + 1000 * 60 * 20, targetStartTime + 1000 * 60 * 30]\r\n                    let timeFour = [targetStartTime + 1000 * 60 * 30, targetStartTime + 1000 * 60 * 40]\r\n                    let timeFive = [targetStartTime + 1000 * 60 * 40, targetStartTime + 1000 * 60 * 50]\r\n                    let timeSix = [targetStartTime + 1000 * 60 * 50, targetStartTime + 1000 * 60 * 60]\r\n\r\n\r\n\r\n                    // console.log('now的时间', hour1.toLocaleTimeString())\r\n                    // console.log('now的时间', hour2.toLocaleTimeString())\r\n                    // console.log('now的时间', hour3.toLocaleTimeString())\r\n                    // console.log('now的时间', hour4.toLocaleTimeString())\r\n                    console.log('now的时间', targetStartTime + 1000 * 60 * 10)\r\n                    console.log('now的时间', targetStartTime + 1000 * 60 * 60)\r\n\r\n                    const timeOneList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeOne[0] && tStart <= timeOne[1]\r\n                    })\r\n\r\n                    const timeTwoList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeTwo[0] && tStart <= timeTwo[1]\r\n                    })\r\n\r\n                    const timeThreeList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeThree[0] && tStart <= timeThree[1]\r\n                    })\r\n\r\n                    const timeFourList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeFour[0] && tStart <= timeFour[1]\r\n                    })\r\n\r\n                    const timeFiveList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeFive[0] && tStart <= timeFive[1]\r\n                    })\r\n\r\n                    let timeSixList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeSix[0] && tStart <= timeSix[1]\r\n                    })\r\n\r\n                    console.log(\"第一段时间过滤的结果：\", timeOneList)\r\n                    console.log(\"第二段时间过滤的结果：\", timeTwoList)\r\n                    console.log(\"第三段时间过滤的结果：\", timeThreeList)\r\n                    console.log(\"第四段时间过滤的结果：\", timeFourList)\r\n                    console.log(\"第五段时间过滤的结果：\", timeFiveList)\r\n                    console.log(\"第六段时间过滤的结果：\", timeSixList)\r\n\r\n                    // 以第1段为例子统计\r\n                    let arrOne = []\r\n                    timeOneList.map(item => {\r\n                        arrOne = arrOne.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总1：', arrOne)\r\n\r\n                    let objOne = {};\r\n                    arrOne.forEach((i, v) => {\r\n                        objOne[`pattern${i}`] = (objOne[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计1：', objOne)\r\n\r\n\r\n                    // 以第2段为例子统计\r\n                    let arrTwo = []\r\n                    timeTwoList.map(item => {\r\n                        arrTwo = arrTwo.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总2：', arrTwo)\r\n\r\n                    let objTwo = {};\r\n                    arrTwo.forEach((i, v) => {\r\n                        objTwo[`pattern${i}`] = (objTwo[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计2：', objTwo)\r\n\r\n\r\n                    // 以第3段为例子统计\r\n                    let arrThree = []\r\n                    timeThreeList.map(item => {\r\n                        arrThree = arrThree.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总3：', arrThree)\r\n\r\n                    let objThree = {};\r\n                    arrThree.forEach((i, v) => {\r\n                        objThree[`pattern${i}`] = (objThree[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计3：', objThree)\r\n\r\n                    // 以第4段为例子统计\r\n                    let arrFour = []\r\n                    timeFourList.map(item => {\r\n                        arrFour = arrFour.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总4：', arrFour)\r\n\r\n                    let objFour = {};\r\n                    arrFour.forEach((i, v) => {\r\n                        objFour[`pattern${i}`] = (objFour[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计4：', objFour)\r\n\r\n                    // 以第5段为例子统计\r\n                    let arrFive = []\r\n                    timeFiveList.map(item => {\r\n                        arrFive = arrFive.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总5：', arrFive)\r\n\r\n                    let objFive = {};\r\n                    arrFive.forEach((i, v) => {\r\n                        objFive[`pattern${i}`] = (objFive[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计5：', objFive)\r\n\r\n                    // 以第六段为例子统计\r\n                    let arrSix = []\r\n                    timeSixList.map(item => {\r\n                        // todo:判断是否为最后一项\r\n                        arrSix = arrSix.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总6：', arrSix)\r\n\r\n                    let objSix = {};\r\n                    arrSix.forEach((i, v) => {\r\n                        objSix[`pattern${i}`] = (objSix[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计6：', objSix)\r\n\r\n\r\n\r\n                    // 绘制图\r\n                    this.$nextTick(() => {\r\n                        let myChartd1 = this.$echarts.init(document.getElementById(\"echart-scatter1\"));\r\n                        let myChartd2 = this.$echarts.init(document.getElementById(\"echart-scatter2\"));\r\n                        let myChartd3 = this.$echarts.init(document.getElementById(\"echart-scatter3\"));\r\n\r\n                        let option1 = {\r\n                            tooltip: {\r\n                                trigger: 'item',\r\n                                formatter: (params) => {  // params就是数据，这里可以打印一下看看\r\n                                    // return 出去什么，鼠标移入就显示什么,marker就是提示前面蓝色的圆点\r\n                                    return `${params.marker}Time:${params.data[0]}</br>Number:${params.data[1]}`\r\n                                }\r\n                            },\r\n                            title: { x: 0, text: 'pattern0-Past One Hour' },\r\n                            xAxis: {\r\n                                name: 'Hour',\r\n                                nameTextStyle: {\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    verticalAlign: 'bottom',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n                                type: 'time',\r\n                                min: targetStartTime,\r\n                                max: targetEndTime + 1000 * 60 * 1,\r\n                                axisLabel: {\r\n                                     //formatter: '{hh}:{mm}:{ss}'\r\n                                    formatter: function (e) {\r\n                                        return timestampToTime(e);\r\n                                    },\r\n                                }\r\n                            },\r\n                            yAxis: {\r\n                                name: 'Amount',\r\n                                boundaryGap: ['5%', '0%'],\r\n                                nameTextStyle: {\r\n                                    align: 'right',\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    type: 'scatter',       //type: scatter表示散点图\r\n                                    data: [\r\n                                        [new Date(targetStartTime + 1000 * 60 * 10), objOne.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 20), objTwo.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 30), objThree.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 40), objFour.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 50), objFive.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60), objSix.pattern0 || 0],\r\n                                    ]\r\n                                }\r\n                            ]\r\n\r\n                        };\r\n\r\n                        function timestampToTime(timestamp) {\r\n                            var date = new Date(timestamp );//时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n                            var Y = date.getFullYear() + '-';\r\n                            var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n                            var D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';\r\n                            var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n                            var m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n                            var s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\r\n                            return  h + m + s;\r\n                        }\r\n\r\n\r\n                        let option2 = {\r\n                            tooltip: {\r\n                                trigger: 'item',\r\n                                formatter: (params) => {  // params就是数据，这里可以打印一下看看\r\n                                    // return 出去什么，鼠标移入就显示什么,marker就是提示前面蓝色的圆点\r\n                                    return `${params.marker}Time:${params.data[0]}</br>Number:${params.data[1]}`\r\n                                }\r\n                            },\r\n                            title: { x: 0, text: 'pattern1-Past One Hour' },\r\n                            xAxis: {\r\n                                name: 'Hour',\r\n                                nameTextStyle: {\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    verticalAlign: 'bottom',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n                                type: 'time',\r\n                                min: targetStartTime,\r\n                                max: targetEndTime + 1000 * 60 * 1,\r\n                                axisLabel: {\r\n                                     //formatter: '{hh}:{mm}:{ss}'\r\n                                    formatter: function (e) {\r\n                                        return timestampToTime(e);\r\n                                    },\r\n                                }\r\n                            },\r\n                            yAxis: {\r\n                                name: 'Amount',\r\n                                boundaryGap: ['5%', '0%'],\r\n                                nameTextStyle: {\r\n                                    align: 'right',\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    type: 'scatter',       //type: scatter表示散点图\r\n                                    data: [\r\n                                        [new Date(targetStartTime + 1000 * 60 * 10), objOne.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 20), objTwo.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 30), objThree.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 40), objFour.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 50), objFive.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60), objSix.pattern1 || 0],\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        };\r\n\r\n                        let option3 = {\r\n                            tooltip: {\r\n                                trigger: 'item',\r\n                                formatter: (params) => {  // params就是数据，这里可以打印一下看看\r\n                                    // return 出去什么，鼠标移入就显示什么,marker就是提示前面蓝色的圆点\r\n                                    return `${params.marker}Time:${params.data[0]}</br>Number:${params.data[1]}`\r\n                                }\r\n                            },\r\n                            title: { x: 0, text: 'pattern2-Past One Hour' },\r\n                            xAxis: {\r\n                                name: 'Hour',\r\n                                nameTextStyle: {\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    verticalAlign: 'bottom',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n                                type: 'time',\r\n                                min: targetStartTime,\r\n                                max: targetEndTime + 1000 * 60 * 1,\r\n                                axisLabel: {\r\n                                     //formatter: '{hh}:{mm}:{ss}'\r\n                                    formatter: function (e) {\r\n                                        return timestampToTime(e);\r\n                                    },\r\n                                }\r\n                            },\r\n                            yAxis: {\r\n                                name: 'Amount',\r\n                                boundaryGap: ['5%', '0%'],\r\n                                nameTextStyle: {\r\n                                    align: 'right',\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    type: 'scatter',       //type: scatter表示散点图\r\n                                    data: [\r\n                                        [new Date(targetStartTime + 1000 * 60 * 10), objOne.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 20), objTwo.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 30), objThree.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 40), objFour.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 50), objFive.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60), objSix.pattern2 || 0],\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        };\r\n\r\n                        //随着屏幕大小调节图表\r\n                        myChartd1.setOption(option1);\r\n                        myChartd2.setOption(option2);\r\n                        myChartd3.setOption(option3);\r\n                        window.onresize = myChartd1.resize;\r\n                        window.onresize = myChartd2.resize;\r\n                        window.onresize = myChartd3.resize;\r\n                    })\r\n\r\n\r\n                }).catch(err => { })\r\n        },\r\n\r\n        drawScatter2() {\r\n            // 获取数据\r\n            const Url = 'https://v614backend-1-x1986037.deta.app/api/v1/records';\r\n            axios.get(Url)\r\n                .then((response) => {\r\n                    let list = response.data\r\n                    console.log('原始数据：', list)\r\n\r\n                    list = list.map(item => {\r\n                        const { userId, patterns, tStart, tEnd } = item\r\n                        return {\r\n                            userId, patterns: JSON.parse(patterns), tStart, tEnd,\r\n                        }\r\n                    })\r\n                    console.log(\"处理后的数据：\", list)\r\n\r\n                    // 过滤登录用户数据\r\n                    let username = sessionStorage.getItem('username')\r\n                    list = list.filter(item => item.userId === username)\r\n                    console.log(\"过滤后的数据：\", list)\r\n\r\n                    const sortList = list.sort((a, b) => {\r\n                        return a.tStart - b.tStart\r\n                    })\r\n\r\n                    console.log(\"排序后数组：\", sortList)\r\n\r\n                    // let initTime = 0\r\n                    // sortList.forEach((i, v) => {\r\n                    //     const { tStart } = i\r\n\r\n                    //     if (tStart > initTime) {\r\n                    //         initTime = tStart\r\n                    //         return\r\n                    //     } else {\r\n                    //         console.log(\"需要排序！！！！\")\r\n                    //     }\r\n                    // })\r\n\r\n                    console.log(\"当前时间戳：\", Date.now())\r\n                    console.log(\"向前一天：\", new Date(Date.now() - 1000 * 60 * 60 * 24))\r\n\r\n                    // 临时测试数据\r\n                    //let tempStartTime = 1676527284480\r\n\r\n                    let now = Date.now()\r\n                    //let now = tempStartTime\r\n\r\n                    // 目标时间段\r\n                    const targetStartTime = now - 1000 * 60 * 60 * 24\r\n                    const targetEndTime = now\r\n\r\n                    console.log(\"数字：\", new Date(1677129454214))\r\n\r\n                    // const targetList = sortList.filter(item => item.tStart >= targetStartTime && item.tEnd <= targetEndTime)\r\n                    const targetList = sortList.filter(item => item.tStart >= targetStartTime && item.tStart <= targetEndTime)\r\n\r\n                    console.log(\"按照时间过滤后的：\", targetList)\r\n\r\n                    // targetList[targetList.length-1]\r\n\r\n                    // 把现在按照时间过滤的数组进行区间划分(12段时间)\r\n                    let timeOne = [targetStartTime, targetStartTime + 1000 * 60 * 60 * 2]\r\n                    let timeTwo = [targetStartTime + 1000 * 60 * 60 * 2, targetStartTime + 1000 * 60 * 60 * 4]\r\n                    let timeThree = [targetStartTime + 1000 * 60 * 60 * 4, targetStartTime + 1000 * 60 * 60 * 6]\r\n                    let timeFour = [targetStartTime + 1000 * 60 * 60 * 6, targetStartTime + 1000 * 60 * 60 * 8]\r\n                    let timeFive = [targetStartTime + 1000 * 60 * 60 * 8, targetStartTime + 1000 * 60 * 60 * 10]\r\n                    let timeSix = [targetStartTime + 1000 * 60 * 60 * 10, targetStartTime + 1000 * 60 * 60 * 12]\r\n                    let timeSeven = [targetStartTime + 1000 * 60 * 60 * 12, targetStartTime + 1000 * 60 * 60 * 14]\r\n                    let timeEight = [targetStartTime + 1000 * 60 * 60 * 14, targetStartTime + 1000 * 60 * 60 * 16]\r\n                    let timeNine = [targetStartTime + 1000 * 60 * 60 * 16, targetStartTime + 1000 * 60 * 60 * 18]\r\n                    let timeTen = [targetStartTime + 1000 * 60 * 60 * 18, targetStartTime + 1000 * 60 * 60 * 20]\r\n                    let timeEleven = [targetStartTime + 1000 * 60 * 60 * 20, targetStartTime + 1000 * 60 * 60 * 22]\r\n                    let timeTwelve = [targetStartTime + 1000 * 60 * 60 * 22, targetStartTime + 1000 * 60 * 60 * 24]\r\n\r\n                    const timeOneList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeOne[0] && tStart <= timeOne[1]\r\n                    })\r\n\r\n                    const timeTwoList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeTwo[0] && tStart <= timeTwo[1]\r\n                    })\r\n\r\n                    const timeThreeList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeThree[0] && tStart <= timeThree[1]\r\n                    })\r\n\r\n                    const timeFourList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeFour[0] && tStart <= timeFour[1]\r\n                    })\r\n\r\n                    const timeFiveList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeFive[0] && tStart <= timeFive[1]\r\n                    })\r\n\r\n                    let timeSixList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeSix[0] && tStart <= timeSix[1]\r\n                    })\r\n\r\n                    let timeSevenList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeSeven[0] && tStart <= timeSeven[1]\r\n                    })\r\n\r\n                    let timeEightList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeEight[0] && tStart <= timeEight[1]\r\n                    })\r\n\r\n                    let timeNineList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeNine[0] && tStart <= timeNine[1]\r\n                    })\r\n\r\n                    let timeTenList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeTen[0] && tStart <= timeTen[1]\r\n                    })\r\n\r\n                    let timeElevenList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeEleven[0] && tStart <= timeEleven[1]\r\n                    })\r\n\r\n                    let timeTwelveList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeTwelve[0] && tStart <= timeTwelve[1]\r\n                    })\r\n\r\n                    console.log(\"第一段时间过滤的结果：\", timeOneList)\r\n                    console.log(\"第二段时间过滤的结果：\", timeTwoList)\r\n                    console.log(\"第三段时间过滤的结果：\", timeThreeList)\r\n                    console.log(\"第四段时间过滤的结果：\", timeFourList)\r\n                    console.log(\"第五段时间过滤的结果：\", timeFiveList)\r\n                    console.log(\"第六段时间过滤的结果：\", timeSixList)\r\n                    console.log(\"第七段时间过滤的结果：\", timeSevenList)\r\n                    console.log(\"第八段时间过滤的结果：\", timeEightList)\r\n                    console.log(\"第九段时间过滤的结果：\", timeNineList)\r\n                    console.log(\"第十段时间过滤的结果：\", timeTenList)\r\n                    console.log(\"第十一段时间过滤的结果：\", timeElevenList)\r\n                    console.log(\"第十二段时间过滤的结果：\", timeTwelveList)\r\n\r\n                    // 以第1段为例子统计\r\n                    let arrOne = []\r\n                    timeOneList.map(item => {\r\n                        arrOne = arrOne.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总1：', arrOne)\r\n\r\n                    let objOne = {};\r\n                    arrOne.forEach((i, v) => {\r\n                        objOne[`pattern${i}`] = (objOne[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计1：', objOne)\r\n\r\n\r\n                    // 以第2段为例子统计\r\n                    let arrTwo = []\r\n                    timeTwoList.map(item => {\r\n                        arrTwo = arrTwo.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总2：', arrTwo)\r\n\r\n                    let objTwo = {};\r\n                    arrTwo.forEach((i, v) => {\r\n                        objTwo[`pattern${i}`] = (objTwo[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计2：', objTwo)\r\n\r\n\r\n                    // 以第3段为例子统计\r\n                    let arrThree = []\r\n                    timeThreeList.map(item => {\r\n                        arrThree = arrThree.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总3：', arrThree)\r\n\r\n                    let objThree = {};\r\n                    arrThree.forEach((i, v) => {\r\n                        objThree[`pattern${i}`] = (objThree[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计3：', objThree)\r\n\r\n                    // 以第4段为例子统计\r\n                    let arrFour = []\r\n                    timeFourList.map(item => {\r\n                        arrFour = arrFour.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总4：', arrFour)\r\n\r\n                    let objFour = {};\r\n                    arrFour.forEach((i, v) => {\r\n                        objFour[`pattern${i}`] = (objFour[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计4：', objFour)\r\n\r\n                    // 以第5段为例子统计\r\n                    let arrFive = []\r\n                    timeFiveList.map(item => {\r\n                        arrFive = arrFive.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总5：', arrFive)\r\n\r\n                    let objFive = {};\r\n                    arrFive.forEach((i, v) => {\r\n                        objFive[`pattern${i}`] = (objFive[`pattern${i }`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计5：', objFive)\r\n\r\n                    // 以第六段为例子统计\r\n                    let arrSix = []\r\n                    timeSixList.map(item => {\r\n                        // todo:判断是否为最后一项\r\n                        arrSix = arrSix.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总6：', arrSix)\r\n\r\n                    let objSix = {};\r\n                    arrSix.forEach((i, v) => {\r\n                        objSix[`pattern${i}`] = (objSix[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计6：', objSix)\r\n\r\n                    // 以第七段为例子统计\r\n                    let arrSeven = []\r\n                    timeSevenList.map(item => {\r\n                        // todo:判断是否为最后一项\r\n                        arrSeven = arrSeven.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总7：', arrSeven)\r\n\r\n                    let objSeven = {};\r\n                    arrSeven.forEach((i, v) => {\r\n                        objSeven[`pattern${i}`] = (objSeven[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计7：', objSeven)\r\n\r\n\r\n                    // 以第八段为例子统计\r\n                    let arrEight = []\r\n                    timeEightList.map(item => {\r\n                        // todo:判断是否为最后一项\r\n                        arrEight = arrEight.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总8：', arrEight)\r\n\r\n                    let objEight = {};\r\n                    arrEight.forEach((i, v) => {\r\n                        objEight[`pattern${i}`] = (objEight[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计8：', objEight)\r\n\r\n                    // 以第九段为例子统计\r\n                    let arrNine = []\r\n                    timeNineList.map(item => {\r\n                        // todo:判断是否为最后一项\r\n                        arrNine = arrNine.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总9：', arrNine)\r\n\r\n                    let objNine = {};\r\n                    arrNine.forEach((i, v) => {\r\n                        objNine[`pattern${i}`] = (objNine[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计9：', objNine)\r\n\r\n                    // 以第10段为例子统计\r\n                    let arrTen = []\r\n                    timeTenList.map(item => {\r\n                        // todo:判断是否为最后一项\r\n                        arrTen = arrTen.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总10：', arrTen)\r\n\r\n                    let objTen = {};\r\n                    arrTen.forEach((i, v) => {\r\n                        objTen[`pattern${i}`] = (objTen[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计10：', objTen)\r\n\r\n                    // 以第11段为例子统计\r\n                    let arrEleven = []\r\n                    timeElevenList.map(item => {\r\n                        // todo:判断是否为最后一项\r\n                        arrEleven = arrEleven.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总11：', arrEleven)\r\n\r\n                    let objEleven = {};\r\n                    arrEleven.forEach((i, v) => {\r\n                        objEleven[`pattern${i}`] = (objEleven[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计11：', objEleven)\r\n\r\n                    // 以第12段为例子统计\r\n                    let arrTwelve = []\r\n                    timeTwelveList.map(item => {\r\n                        // todo:判断是否为最后一项\r\n                        arrTwelve = arrTwelve.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总12：', arrTwelve)\r\n\r\n                    let objTwelve = {};\r\n                    arrTwelve.forEach((i, v) => {\r\n                        objTwelve[`pattern${i}`] = (objTwelve[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计12：', objTwelve)\r\n\r\n\r\n\r\n                    // 绘制图\r\n                    this.$nextTick(() => {\r\n                        let myChartd1 = this.$echarts.init(document.getElementById(\"echart-scatter4\"));\r\n                        let myChartd2 = this.$echarts.init(document.getElementById(\"echart-scatter5\"));\r\n                        let myChartd3 = this.$echarts.init(document.getElementById(\"echart-scatter6\"));\r\n\r\n                        let option1 = {\r\n                            tooltip: {\r\n                                trigger: 'item',\r\n                                formatter: (params) => {  // params就是数据，这里可以打印一下看看\r\n                                    // return 出去什么，鼠标移入就显示什么,marker就是提示前面蓝色的圆点\r\n                                    return `${params.marker}Time:${params.data[0]}</br>Number:${params.data[1]}`\r\n                                }\r\n                            },\r\n                            title: { x: 0, text: 'pattern0-Past One Day' },\r\n                            xAxis: {\r\n                                name: 'Day',\r\n                                nameTextStyle: {\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    verticalAlign: 'bottom',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n                                type: 'time',\r\n                                min: targetStartTime,\r\n                                max: targetEndTime + 1000 * 60 * 60,\r\n                                axisLabel: {\r\n                                     //formatter: '{hh}:{mm}:{ss}'\r\n                                    formatter: function (e) {\r\n                                        return timestampToTime(e);\r\n                                    },\r\n                                }\r\n                            },\r\n                            yAxis: {\r\n                                name: 'Amount',\r\n                                boundaryGap: ['5%', '0%'],\r\n                                nameTextStyle: {\r\n                                    align: 'right',\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    type: 'scatter',       //type: scatter表示散点图\r\n                                    data: [\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 2), objOne.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 4), objTwo.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 6), objThree.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 8), objFour.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 10), objFive.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 12), objSix.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 14), objSeven.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 16), objEight.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 18), objNine.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 20), objTen.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 22), objEleven.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 24), objTwelve.pattern0 || 0],\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        };\r\n\r\n                        function timestampToTime(timestamp) {\r\n                            var date = new Date(timestamp );//时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n                            var Y = date.getFullYear() + '-';\r\n                            var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n                            var D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';\r\n                            var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n                            var m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) ;\r\n                            var s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\r\n                            return M + D + h + m ;\r\n                        }\r\n\r\n                        let option2 = {\r\n                            tooltip: {\r\n                                trigger: 'item',\r\n                                formatter: (params) => {  // params就是数据，这里可以打印一下看看\r\n                                    // return 出去什么，鼠标移入就显示什么,marker就是提示前面蓝色的圆点\r\n                                    return `${params.marker}Time:${params.data[0]}</br>Number:${params.data[1]}`\r\n                                }\r\n                            },\r\n                            title: { x: 0, text: 'pattern1-Past One Day' },\r\n                            xAxis: {\r\n                                name: 'Day',\r\n                                nameTextStyle: {\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    verticalAlign: 'bottom',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n                                type: 'time',\r\n                                min: targetStartTime,\r\n                                max: targetEndTime + 1000 * 60 * 60,\r\n                                axisLabel: {\r\n                                     //formatter: '{hh}:{mm}:{ss}'\r\n                                    formatter: function (e) {\r\n                                        return timestampToTime(e);\r\n                                    },\r\n                                }\r\n                            },\r\n                            yAxis: {\r\n                                name: 'Amount',\r\n\r\n\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    type: 'scatter',       //type: scatter表示散点图\r\n                                    data: [\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 2), objOne.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 4), objTwo.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 6), objThree.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 8), objFour.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 10), objFive.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 12), objSix.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 14), objSeven.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 16), objEight.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 18), objNine.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 20), objTen.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 22), objEleven.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 24), objTwelve.pattern1 || 0],\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        };\r\n\r\n                        let option3 = {\r\n                            tooltip: {\r\n                                trigger: 'item',\r\n                                formatter: (params) => {  // params就是数据，这里可以打印一下看看\r\n                                    // return 出去什么，鼠标移入就显示什么,marker就是提示前面蓝色的圆点\r\n                                    return `${params.marker}Time:${params.data[0]}</br>Number:${params.data[1]}`\r\n                                }\r\n                            },\r\n                            title: { x: 0, text: 'pattern2-Past One Day' },\r\n                            xAxis: {\r\n                                name: 'Day',\r\n                                nameTextStyle: {\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    verticalAlign: 'bottom',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n                                type: 'time',\r\n                                min: targetStartTime,\r\n                                max: targetEndTime + 1000 * 60 * 60,\r\n                                axisLabel: {\r\n                                     //formatter: '{hh}:{mm}:{ss}'\r\n                                    formatter: function (e) {\r\n                                        return timestampToTime(e);\r\n                                    },\r\n                                }\r\n                            },\r\n                            yAxis: {\r\n                                name: 'Amount',\r\n                                boundaryGap: ['5%', '0%'],\r\n                                nameTextStyle: {\r\n                                    align: 'right',\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    type: 'scatter',       //type: scatter表示散点图\r\n                                    data: [\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 2), objOne.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 4), objTwo.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 6), objThree.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 8), objFour.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 10), objFive.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 12), objSix.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 14), objSeven.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 16), objEight.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 18), objNine.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 20), objTen.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 22), objEleven.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 24), objTwelve.pattern2 || 0],\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        };\r\n\r\n                        //随着屏幕大小调节图表\r\n                        myChartd1.setOption(option1);\r\n                        myChartd2.setOption(option2);\r\n                        myChartd3.setOption(option3);\r\n                        window.onresize = myChartd1.resize;\r\n                        window.onresize = myChartd2.resize;\r\n                        window.onresize = myChartd3.resize;\r\n                    })\r\n\r\n\r\n                }).catch(err => { })\r\n        },\r\n\r\n        drawScatter3() {\r\n            // 获取数据\r\n            const Url = 'https://v614backend-1-x1986037.deta.app/api/v1/records';\r\n            axios.get(Url)\r\n                .then((response) => {\r\n                    let list = response.data\r\n                    console.log('原始数据：', list)\r\n\r\n                    list = list.map(item => {\r\n                        const { userId, patterns, tStart, tEnd } = item\r\n                        return {\r\n                            userId, patterns: JSON.parse(patterns), tStart, tEnd,\r\n                        }\r\n                    })\r\n                    console.log(\"处理后的数据：\", list)\r\n\r\n                    // 过滤登录用户数据\r\n                    let username = sessionStorage.getItem('username')\r\n                    list = list.filter(item => item.userId === username)\r\n                    console.log(\"过滤后的数据：\", list)\r\n\r\n                    const sortList = list.sort((a, b) => {\r\n                        return a.tStart - b.tStart\r\n                    })\r\n\r\n                    console.log(\"排序后数组：\", sortList)\r\n\r\n                    // let initTime = 0\r\n                    // sortList.forEach((i, v) => {\r\n                    //     const { tStart } = i\r\n\r\n                    //     if (tStart > initTime) {\r\n                    //         initTime = tStart\r\n                    //         return\r\n                    //     } else {\r\n                    //         console.log(\"需要排序！！！！\")\r\n                    //     }\r\n                    // })\r\n\r\n                    console.log(\"当前时间戳：\", Date.now())\r\n                    console.log(\"向前一周：\", new Date(Date.now() - 1000 * 60 * 60 * 24 * 7))\r\n\r\n                    // 临时测试数据\r\n                    //let tempStartTime = 1676527284480\r\n\r\n                    let now = Date.now()\r\n                    //let now = tempStartTime\r\n\r\n                    // 目标时间段\r\n                    const targetStartTime = now - 1000 * 60 * 60 * 24 * 7\r\n                    const targetEndTime = now\r\n\r\n                    // const targetList = sortList.filter(item => item.tStart >= targetStartTime && item.tEnd <= targetEndTime)\r\n                    const targetList = sortList.filter(item => item.tStart >= targetStartTime && item.tStart <= targetEndTime)\r\n\r\n                    console.log(\"按照时间过滤后的：\", targetList)\r\n\r\n                    // targetList[targetList.length-1]\r\n\r\n                    // 把现在按照时间过滤的数组进行区间划分(7段时间)\r\n                    let timeOne = [targetStartTime, targetStartTime + 1000 * 60 * 60 * 24]\r\n                    let timeTwo = [targetStartTime + 1000 * 60 * 60 * 24, targetStartTime + 1000 * 60 * 60 * 48]\r\n                    let timeThree = [targetStartTime + 1000 * 60 * 60 * 48, targetStartTime + 1000 * 60 * 60 * 72]\r\n                    let timeFour = [targetStartTime + 1000 * 60 * 60 * 72, targetStartTime + 1000 * 60 * 60 * 96]\r\n                    let timeFive = [targetStartTime + 1000 * 60 * 60 * 96, targetStartTime + 1000 * 60 * 60 * 120]\r\n                    let timeSix = [targetStartTime + 1000 * 60 * 60 * 120, targetStartTime + 1000 * 60 * 60 * 144]\r\n                    let timeSeven = [targetStartTime + 1000 * 60 * 60 * 144, targetStartTime + 1000 * 60 * 60 * 168]\r\n\r\n\r\n                    const timeOneList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeOne[0] && tStart <= timeOne[1]\r\n                    })\r\n\r\n                    const timeTwoList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeTwo[0] && tStart <= timeTwo[1]\r\n                    })\r\n\r\n                    const timeThreeList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeThree[0] && tStart <= timeThree[1]\r\n                    })\r\n\r\n                    const timeFourList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeFour[0] && tStart <= timeFour[1]\r\n                    })\r\n\r\n                    const timeFiveList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeFive[0] && tStart <= timeFive[1]\r\n                    })\r\n\r\n                    let timeSixList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeSix[0] && tStart <= timeSix[1]\r\n                    })\r\n\r\n                    let timeSevenList = targetList.filter(item => {\r\n                        const { tStart } = item\r\n                        return tStart >= timeSeven[0] && tStart <= timeSeven[1]\r\n                    })\r\n\r\n\r\n                    console.log(\"第一段时间过滤的结果：\", timeOneList)\r\n                    console.log(\"第二段时间过滤的结果：\", timeTwoList)\r\n                    console.log(\"第三段时间过滤的结果：\", timeThreeList)\r\n                    console.log(\"第四段时间过滤的结果：\", timeFourList)\r\n                    console.log(\"第五段时间过滤的结果：\", timeFiveList)\r\n                    console.log(\"第六段时间过滤的结果：\", timeSixList)\r\n                    console.log(\"第七段时间过滤的结果：\", timeSevenList)\r\n\r\n\r\n                    // 以第1段为例子统计\r\n                    let arrOne = []\r\n                    timeOneList.map(item => {\r\n                        arrOne = arrOne.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总1：', arrOne)\r\n\r\n                    let objOne = {};\r\n                    arrOne.forEach((i, v) => {\r\n                        objOne[`pattern${i}`] = (objOne[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计1：', objOne)\r\n\r\n\r\n                    // 以第2段为例子统计\r\n                    let arrTwo = []\r\n                    timeTwoList.map(item => {\r\n                        arrTwo = arrTwo.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总2：', arrTwo)\r\n\r\n                    let objTwo = {};\r\n                    arrTwo.forEach((i, v) => {\r\n                        objTwo[`pattern${i}`] = (objTwo[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计2：', objTwo)\r\n\r\n\r\n                    // 以第3段为例子统计\r\n                    let arrThree = []\r\n                    timeThreeList.map(item => {\r\n                        arrThree = arrThree.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总3：', arrThree)\r\n\r\n                    let objThree = {};\r\n                    arrThree.forEach((i, v) => {\r\n                        objThree[`pattern${i}`] = (objThree[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计3：', objThree)\r\n\r\n                    // 以第4段为例子统计\r\n                    let arrFour = []\r\n                    timeFourList.map(item => {\r\n                        arrFour = arrFour.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总4：', arrFour)\r\n\r\n                    let objFour = {};\r\n                    arrFour.forEach((i, v) => {\r\n                        objFour[`pattern${i}`] = (objFour[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计4：', objFour)\r\n\r\n                    // 以第5段为例子统计\r\n                    let arrFive = []\r\n                    timeFiveList.map(item => {\r\n                        arrFive = arrFive.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总5：', arrFive)\r\n\r\n                    let objFive = {};\r\n                    arrFive.forEach((i, v) => {\r\n                        objFive[`pattern${i}`] = (objFive[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计5：', objFive)\r\n\r\n                    // 以第六段为例子统计\r\n                    let arrSix = []\r\n                    timeSixList.map(item => {\r\n                        // todo:判断是否为最后一项\r\n                        arrSix = arrSix.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总6：', arrSix)\r\n\r\n                    let objSix = {};\r\n                    arrSix.forEach((i, v) => {\r\n                        objSix[`pattern${i}`] = (objSix[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计6：', objSix)\r\n\r\n                    // 以第七段为例子统计\r\n                    let arrSeven = []\r\n                    timeSevenList.map(item => {\r\n                        // todo:判断是否为最后一项\r\n                        arrSeven = arrSeven.concat(item.patterns)\r\n                    })\r\n                    console.log('数据汇总7：', arrSeven)\r\n\r\n                    let objSeven = {};\r\n                    arrSeven.forEach((i, v) => {\r\n                        objSeven[`pattern${i}`] = (objSeven[`pattern${i}`] || 0) + 1;\r\n                    });\r\n\r\n                    console.log('统计7：', objSeven)\r\n\r\n\r\n\r\n\r\n\r\n                    // 绘制图\r\n                    this.$nextTick(() => {\r\n                        let myChartd1 = this.$echarts.init(document.getElementById(\"echart-scatter7\"));\r\n                        let myChartd2 = this.$echarts.init(document.getElementById(\"echart-scatter8\"));\r\n                        let myChartd3 = this.$echarts.init(document.getElementById(\"echart-scatter9\"));\r\n\r\n                        let option1 = {\r\n                            tooltip: {\r\n                                trigger: 'item',\r\n                                formatter: (params) => {  // params就是数据，这里可以打印一下看看\r\n                                    // return 出去什么，鼠标移入就显示什么,marker就是提示前面蓝色的圆点\r\n                                    return `${params.marker}Time:${params.data[0]}</br>Number:${params.data[1]}`\r\n                                }\r\n                            },\r\n                            title: { x: 0, text: 'pattern0-Past One Week' },\r\n                            xAxis: {\r\n                                name: 'Week',\r\n                                nameTextStyle: {\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    verticalAlign: 'bottom',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n                                type: 'time',\r\n                                min: targetStartTime,\r\n                                max: targetEndTime + 1000 * 60 * 60 * 12,\r\n                                axisLabel: {\r\n                                     //formatter: '{hh}:{mm}:{ss}'\r\n                                    formatter: function (e) {\r\n                                        return timestampToTime(e);\r\n                                    },\r\n                                }\r\n                            },\r\n                            yAxis: {\r\n                                name: 'Amount',\r\n                                boundaryGap: ['5%', '0%'],\r\n                                nameTextStyle: {\r\n                                    align: 'right',\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    type: 'scatter',       //type: scatter表示散点图\r\n                                    data: [\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 24), objOne.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 48), objTwo.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 72), objThree.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 96), objFour.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 120), objFive.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 144), objSix.pattern0 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 168), objSeven.pattern0 || 0],\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        };\r\n\r\n                        function timestampToTime(timestamp) {\r\n                            var date = new Date(timestamp );//时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n                            var Y = date.getFullYear() + '-';\r\n                            var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n                            var D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';\r\n                            var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n                            var m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) ;\r\n                            var s = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\r\n                            return M + D + h + m ;\r\n                        }\r\n\r\n                        let option2 = {\r\n                            tooltip: {\r\n                                trigger: 'item',\r\n                                formatter: (params) => {  // params就是数据，这里可以打印一下看看\r\n                                    // return 出去什么，鼠标移入就显示什么,marker就是提示前面蓝色的圆点\r\n                                    return `${params.marker}Time:${params.data[0]}</br>Number:${params.data[1]}`\r\n                                }\r\n                            },\r\n                            title: { x: 0, text: 'pattern1-Past One Week' },\r\n                            xAxis: {\r\n                                name: 'Week',\r\n                                nameTextStyle: {\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    verticalAlign: 'bottom',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n                                type: 'time',\r\n                                min: targetStartTime,\r\n                                max: targetEndTime + 1000 * 60 * 60 * 12,\r\n                                axisLabel: {\r\n                                     //formatter: '{hh}:{mm}:{ss}'\r\n                                    formatter: function (e) {\r\n                                        return timestampToTime(e);\r\n                                    },\r\n                                }\r\n                            },\r\n                            yAxis: {\r\n                                name: 'Amount',\r\n                                boundaryGap: ['5%', '0%'],\r\n                                nameTextStyle: {\r\n                                    align: 'right',\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    type: 'scatter',       //type: scatter表示散点图\r\n                                    data: [\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 24), objOne.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 48), objTwo.pattern1|| 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 72), objThree.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 96), objFour.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 120), objFive.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 144), objSix.pattern1 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 168), objSeven.pattern1 || 0],\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        };\r\n\r\n                        let option3 = {\r\n                            tooltip: {\r\n                                trigger: 'item',\r\n                                formatter: (params) => {  // params就是数据，这里可以打印一下看看\r\n                                    // return 出去什么，鼠标移入就显示什么,marker就是提示前面蓝色的圆点\r\n                                    return `${params.marker}Time:${params.data[0]}</br>Number:${params.data[1]}`\r\n                                }\r\n                            },\r\n                            title: { x: 0, text: 'pattern3-Past One Week' },\r\n                            xAxis: {\r\n                                name: 'Week',\r\n                                nameTextStyle: {\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    verticalAlign: 'bottom',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n                                type: 'time',\r\n                                min: targetStartTime,\r\n                                max: targetEndTime + 1000 * 60 * 60 * 12,\r\n                                axisLabel: {\r\n                                     //formatter: '{hh}:{mm}:{ss}'\r\n                                    formatter: function (e) {\r\n                                        return timestampToTime(e);\r\n                                    },\r\n                                }\r\n                            },\r\n                            yAxis: {\r\n                                name: 'Amount',\r\n                                boundaryGap: ['5%', '0%'],\r\n                                nameTextStyle: {\r\n                                    align: 'right',\r\n                                    fontSize: 15,\r\n                                    color: '#666',\r\n                                    fontWeight: 'bold'\r\n                                },\r\n\r\n                            },\r\n                            series: [\r\n                                {\r\n                                    type: 'scatter',       //type: scatter表示散点图\r\n                                    data: [\r\n                                    [new Date(targetStartTime + 1000 * 60 * 60 * 24), objOne.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 48), objTwo.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 72), objThree.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 96), objFour.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 120), objFive.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 144), objSix.pattern2 || 0],\r\n                                        [new Date(targetStartTime + 1000 * 60 * 60 * 168), objSeven.pattern2 || 0],\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        };\r\n\r\n                        //随着屏幕大小调节图表\r\n                        myChartd1.setOption(option1);\r\n                        myChartd2.setOption(option2);\r\n                        myChartd3.setOption(option3);\r\n                        window.onresize = myChartd1.resize;\r\n                        window.onresize = myChartd2.resize;\r\n                        window.onresize = myChartd3.resize;\r\n                    })\r\n\r\n\r\n                }).catch(err => { })\r\n        },\r\n\r\n\r\n\r\n        handleCommand(cmditem) {\r\n            if (!cmditem) {\r\n                this.$message(\"菜单选项缺少command属性\");\r\n                return;\r\n            }\r\n            switch (cmditem) {\r\n                case \"userGroup\":\r\n                    this.userGroup();\r\n                    break;\r\n                case \"userGroup2\":\r\n                    this.userGroup2();\r\n                    break;\r\n                case \"userGroup3\":\r\n                    this.userGroup3();\r\n                    break;\r\n            }\r\n        },\r\n\r\n        userGroup() {\r\n            this.show1 = true;\r\n            this.show2 = true;\r\n            this.show3 = true;\r\n            this.show4 = false;\r\n            this.show5 = false;\r\n            this.show6 = false;\r\n            this.show7 = false;\r\n            this.show8 = false;\r\n            this.show9 = false;\r\n            this.drawScatter();\r\n        },\r\n        userGroup2() {\r\n            this.show1 = false;\r\n            this.show2 = false;\r\n            this.show3 = false;\r\n            this.show4 = true;\r\n            this.show5 = true;\r\n            this.show6 = true;\r\n            this.show7 = false;\r\n            this.show8 = false;\r\n            this.show9 = false;\r\n            this.drawScatter2();\r\n        },\r\n        userGroup3() {\r\n            this.show1 = false;\r\n            this.show2 = false;\r\n            this.show3 = false;\r\n            this.show4 = false;\r\n            this.show5 = false;\r\n            this.show6 = false;\r\n            this.show7 = true;\r\n            this.show8 = true;\r\n            this.show9 = true;\r\n            this.drawScatter3();\r\n        },\r\n\r\n    },\r\n\r\n}\r\n\r\n\r\n</script>\r\n    \r\n<style>\r\n.el-dropdown {\r\n    vertical-align: top;\r\n}\r\n\r\n.el-dropdown+.el-dropdown {\r\n    margin-left: 15px;\r\n}\r\n\r\n.el-icon-arrow-down {\r\n    font-size: 12px;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/Home/Home.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('div',[_c('h3',[_vm._v(\"   Pattern Histoty\")]),_vm._v(\" \"),_c('el-divider')],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":24}},[_c('div',{style:({ width: '100%', height: '300px', }),attrs:{\"id\":\"echart-pie1\"}})]),_vm._v(\" \"),_c('el-dropdown',{on:{\"command\":_vm.handleCommand}},[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"round\":\"\"}},[_vm._v(\"\\n            Select\"),_c('i',{staticClass:\"el-icon-arrow-down el-icon--right\"})]),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":\"userGroup\"}},[_vm._v(\"Hour\")]),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":\"userGroup2\"}},[_vm._v(\"Day\")]),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":\"userGroup3\"}},[_vm._v(\"Week\")])],1)],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":24}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show1),expression:\"show1\"}],style:({ width: '100%', height: '300px' }),attrs:{\"id\":\"echart-scatter1\"}})]),_vm._v(\" \"),_c('el-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show2),expression:\"show2\"}],attrs:{\"span\":24}},[_c('div',{style:({ width: '100%', height: '300px' }),attrs:{\"id\":\"echart-scatter2\"}})]),_vm._v(\" \"),_c('el-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show3),expression:\"show3\"}],attrs:{\"span\":24}},[_c('div',{style:({ width: '100%', height: '300px' }),attrs:{\"id\":\"echart-scatter3\"}})]),_vm._v(\" \"),_c('el-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show4),expression:\"show4\"}],attrs:{\"span\":24}},[_c('div',{style:({ width: '100%', height: '300px' }),attrs:{\"id\":\"echart-scatter4\"}})]),_vm._v(\" \"),_c('el-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show5),expression:\"show5\"}],attrs:{\"span\":24}},[_c('div',{style:({ width: '100%', height: '300px' }),attrs:{\"id\":\"echart-scatter5\"}})]),_vm._v(\" \"),_c('el-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show6),expression:\"show6\"}],attrs:{\"span\":24}},[_c('div',{style:({ width: '100%', height: '300px' }),attrs:{\"id\":\"echart-scatter6\"}})]),_vm._v(\" \"),_c('el-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show7),expression:\"show7\"}],attrs:{\"span\":24}},[_c('div',{style:({ width: '100%', height: '300px' }),attrs:{\"id\":\"echart-scatter7\"}})]),_vm._v(\" \"),_c('el-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show8),expression:\"show8\"}],attrs:{\"span\":24}},[_c('div',{style:({ width: '100%', height: '300px' }),attrs:{\"id\":\"echart-scatter8\"}})]),_vm._v(\" \"),_c('el-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show9),expression:\"show9\"}],attrs:{\"span\":24}},[_c('div',{style:({ width: '100%', height: '300px' }),attrs:{\"id\":\"echart-scatter9\"}})])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-85ba41fe\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/Home/Home.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-85ba41fe\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Home.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-85ba41fe\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Home/Home.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}